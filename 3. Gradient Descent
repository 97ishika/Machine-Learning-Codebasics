#
Import necessary libraries
import pandas as pd
import numpy as np
import math

# Read data
df = pd.read_csv("/kaggle/input/test_scores.csv")
df.head()

# Gradient descent
function
def gradient_descent(X, y):

  learning_rate = 0.001
m_current = b_current = 0
iterations = 1000
m = len(y)
cost_previous = 0

for i in range(iterations):
  y_predicted = m_current * X + b_current
m_derivative = -(2 / m) * sum(X * (y - y_predicted))
b_derivative = -(2 / m) * sum(y - y_predicted)
m_current = m_current - learning_rate * m_derivative
b_current = b_current - learning_rate * b_derivative
cost = (1 / m) * sum([val ** 2
  for val in (y - y_predicted)
])
if math.isclose(cost, cost_previous, rel_tol = 1e-20):
  break
cost_previous = cost
print("m{}, b{}, cost{}, iteration{}".format(m_current, b_current, cost, i))

X = df['math']# Independent variable
y = df['cs']# Dependent variable

gradient_descent(X, y)
